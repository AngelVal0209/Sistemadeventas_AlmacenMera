// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sistemadeventas_AlmacenMera.Data;

#nullable disable

namespace Sistemadeventas_AlmacenMera.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Sistemadeventas_AlmacenMera.Models.Almacen", b =>
                {
                    b.Property<int>("IdAlmacen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAlmacen"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaEntrada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int?>("IdProducto")
                        .HasColumnType("int");

                    b.HasKey("IdAlmacen");

                    b.HasIndex("IdProducto");

                    b.ToTable("Almacenes");
                });

            modelBuilder.Entity("Sistemadeventas_AlmacenMera.Models.Categoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoria"));

                    b.Property<string>("NombreCategoria")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdCategoria");

                    b.HasIndex("NombreCategoria");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("Sistemadeventas_AlmacenMera.Models.DetalleVenta", b =>
                {
                    b.Property<int>("IdDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetalle"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("IdProducto")
                        .HasColumnType("int");

                    b.Property<int?>("IdVenta")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdDetalle");

                    b.HasIndex("IdProducto");

                    b.HasIndex("IdVenta");

                    b.ToTable("DetalleVentas");
                });

            modelBuilder.Entity("Sistemadeventas_AlmacenMera.Models.Fiado", b =>
                {
                    b.Property<int>("IdFiado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFiado"));

                    b.Property<string>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Pendiente");

                    b.Property<DateTime?>("FechaInicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("FechaVencimiento")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdVenta")
                        .HasColumnType("int");

                    b.Property<decimal?>("MontoPagado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontoTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SaldoPendiente")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdFiado");

                    b.HasIndex("IdVenta");

                    b.ToTable("Fiados");
                });

            modelBuilder.Entity("Sistemadeventas_AlmacenMera.Models.HistorialEntradasSalida", b =>
                {
                    b.Property<int>("IdHistorial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHistorial"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaMovimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int?>("IdProducto")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoMovimiento")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdHistorial");

                    b.HasIndex("IdProducto");

                    b.ToTable("HistorialEntradasSalidas");
                });

            modelBuilder.Entity("Sistemadeventas_AlmacenMera.Models.HistorialPrecio", b =>
                {
                    b.Property<int>("IdPrecio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPrecio"));

                    b.Property<DateTime?>("FechaCambio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int?>("IdProducto")
                        .HasColumnType("int");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdPrecio");

                    b.HasIndex("IdProducto");

                    b.ToTable("HistorialPrecios");
                });

            modelBuilder.Entity("Sistemadeventas_AlmacenMera.Models.HistorialVentasUsuario", b =>
                {
                    b.Property<int>("IdHistorialVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHistorialVenta"));

                    b.Property<DateTime?>("FechaVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int?>("IdVenta")
                        .HasColumnType("int");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalVenta")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdHistorialVenta");

                    b.HasIndex("IdVenta");

                    b.ToTable("HistorialVentasUsuarios");
                });

            modelBuilder.Entity("Sistemadeventas_AlmacenMera.Models.PagosFiado", b =>
                {
                    b.Property<int>("IdPagoFiado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPagoFiado"));

                    b.Property<DateTime?>("FechaPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int?>("IdFiado")
                        .HasColumnType("int");

                    b.Property<string>("MetodoPago")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MontoPago")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdPagoFiado");

                    b.HasIndex("IdFiado");

                    b.ToTable("PagosFiados");
                });

            modelBuilder.Entity("Sistemadeventas_AlmacenMera.Models.Productos", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProducto"));

                    b.Property<string>("CodigoBarras")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("FechaVencimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("FotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<int?>("IdProveedor")
                        .HasColumnType("int");

                    b.Property<string>("NombreProducto")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("IdProducto");

                    b.HasIndex("CodigoBarras")
                        .IsUnique()
                        .HasFilter("[CodigoBarras] IS NOT NULL");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdProveedor");

                    b.HasIndex("NombreProducto");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("Sistemadeventas_AlmacenMera.Models.Proveedores", b =>
                {
                    b.Property<int>("IdProveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProveedor"));

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreProveedor")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdProveedor");

                    b.HasIndex("NombreProveedor");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("Sistemadeventas_AlmacenMera.Models.Roles", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRol"));

                    b.Property<string>("NombreRol")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdRol");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Sistemadeventas_AlmacenMera.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Activo");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("FotoPerfilPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdRol")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdUsuario");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("IdRol");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Sistemadeventas_AlmacenMera.Models.Venta", b =>
                {
                    b.Property<int>("IdVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVenta"));

                    b.Property<string>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Pendiente");

                    b.Property<DateTime?>("FechaVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("TipoVenta")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdVenta");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("Sistemadeventas_AlmacenMera.Models.Almacen", b =>
                {
                    b.HasOne("Sistemadeventas_AlmacenMera.Models.Productos", "IdProductoNavigation")
                        .WithMany("Almacens")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("IdProductoNavigation");
                });

            modelBuilder.Entity("Sistemadeventas_AlmacenMera.Models.DetalleVenta", b =>
                {
                    b.HasOne("Sistemadeventas_AlmacenMera.Models.Productos", "IdProductoNavigation")
                        .WithMany("DetalleVenta")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Sistemadeventas_AlmacenMera.Models.Venta", "IdVentaNavigation")
                        .WithMany("DetalleVenta")
                        .HasForeignKey("IdVenta")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("IdProductoNavigation");

                    b.Navigation("IdVentaNavigation");
                });

            modelBuilder.Entity("Sistemadeventas_AlmacenMera.Models.Fiado", b =>
                {
                    b.HasOne("Sistemadeventas_AlmacenMera.Models.Venta", "IdVentaNavigation")
                        .WithMany("Fiados")
                        .HasForeignKey("IdVenta")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("IdVentaNavigation");
                });

            modelBuilder.Entity("Sistemadeventas_AlmacenMera.Models.HistorialEntradasSalida", b =>
                {
                    b.HasOne("Sistemadeventas_AlmacenMera.Models.Productos", "IdProductoNavigation")
                        .WithMany("HistorialEntradasSalida")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("IdProductoNavigation");
                });

            modelBuilder.Entity("Sistemadeventas_AlmacenMera.Models.HistorialPrecio", b =>
                {
                    b.HasOne("Sistemadeventas_AlmacenMera.Models.Productos", "IdProductoNavigation")
                        .WithMany("HistorialPrecios")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("IdProductoNavigation");
                });

            modelBuilder.Entity("Sistemadeventas_AlmacenMera.Models.HistorialVentasUsuario", b =>
                {
                    b.HasOne("Sistemadeventas_AlmacenMera.Models.Venta", "IdVentaNavigation")
                        .WithMany("HistorialVentasUsuarios")
                        .HasForeignKey("IdVenta")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("IdVentaNavigation");
                });

            modelBuilder.Entity("Sistemadeventas_AlmacenMera.Models.PagosFiado", b =>
                {
                    b.HasOne("Sistemadeventas_AlmacenMera.Models.Fiado", "IdFiadoNavigation")
                        .WithMany("PagosFiados")
                        .HasForeignKey("IdFiado")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("IdFiadoNavigation");
                });

            modelBuilder.Entity("Sistemadeventas_AlmacenMera.Models.Productos", b =>
                {
                    b.HasOne("Sistemadeventas_AlmacenMera.Models.Categoria", "IdCategoriaNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Sistemadeventas_AlmacenMera.Models.Proveedores", "IdProveedorNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("IdProveedor")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("IdCategoriaNavigation");

                    b.Navigation("IdProveedorNavigation");
                });

            modelBuilder.Entity("Sistemadeventas_AlmacenMera.Models.Usuario", b =>
                {
                    b.HasOne("Sistemadeventas_AlmacenMera.Models.Roles", "IdRolNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("IdRolNavigation");
                });

            modelBuilder.Entity("Sistemadeventas_AlmacenMera.Models.Venta", b =>
                {
                    b.HasOne("Sistemadeventas_AlmacenMera.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Venta")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("Sistemadeventas_AlmacenMera.Models.Categoria", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Sistemadeventas_AlmacenMera.Models.Fiado", b =>
                {
                    b.Navigation("PagosFiados");
                });

            modelBuilder.Entity("Sistemadeventas_AlmacenMera.Models.Productos", b =>
                {
                    b.Navigation("Almacens");

                    b.Navigation("DetalleVenta");

                    b.Navigation("HistorialEntradasSalida");

                    b.Navigation("HistorialPrecios");
                });

            modelBuilder.Entity("Sistemadeventas_AlmacenMera.Models.Proveedores", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Sistemadeventas_AlmacenMera.Models.Roles", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Sistemadeventas_AlmacenMera.Models.Usuario", b =>
                {
                    b.Navigation("Venta");
                });

            modelBuilder.Entity("Sistemadeventas_AlmacenMera.Models.Venta", b =>
                {
                    b.Navigation("DetalleVenta");

                    b.Navigation("Fiados");

                    b.Navigation("HistorialVentasUsuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
